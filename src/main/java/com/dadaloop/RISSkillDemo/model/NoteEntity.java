package com.dadaloop.RISSkillDemo.model;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

/**
 * The NoteEntity class represents a note entity in the database.
 * It is marked with @Entity to make it a JPA entity.
 */
@Entity
public class NoteEntity {

    /**
     * The ID field is the primary key of the entity.
     * It is auto-generated by the database using the IDENTITY strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The title field represents the title of the note.
     * It is a simple string.
     */
    private String title;

    /**
     * The text field represents the content of the note.
     * It is a simple string that holds the note's text.
     */
    private String text;

    /**
     * Default constructor without arguments.
     * Required by the JPA specification for entity classes.
     */
    public NoteEntity() {}

    /**
     * Constructor with arguments to create a new NoteEntity instance with a title and text.
     * @param title The title of the note.
     * @param text The content of the note.
     */
    public NoteEntity(String title, String text) {
        this.title = title;
        this.text = text;
    }

    // Getters and Setters

    /**
     * Gets the ID of the note.
     * @return The ID of the note.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the ID of the note.
     * @param id The new ID of the note.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the title of the note.
     * @return The title of the note.
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the title of the note.
     * @param title The new title of the note.
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Gets the text of the note.
     * @return The text of the note.
     */
    public String getText() {
        return text;
    }

    /**
     * Sets the text of the note.
     * @param text The new text of the note.
     */
    public void setText(String text) {
        this.text = text;
    }
}
